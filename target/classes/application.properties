server.port=8080

# \u65E5\u5FD7
logging.file=secondkill.log
logging.level.root=info

# \u6570\u636E\u5E93
spring.datasource.url=jdbc:mysql://localhost:3306/seconds_kill?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=!Kj89910
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# redis \u914D\u7F6E \u9759\u6001\u53D8\u91CF\u6CE8\u5165\u5931\u8D25\uFF0C\u76F4\u63A5\u5728\u4EE3\u7801\u4E2D\u914D\u7F6E
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
redis.maxIdle=100
redis.maxTotal=300
redis.maxWait=10000
redis.testOnBorrow=true
redis.timeout=100000
# \u9650\u6D41
redis.limit=5

# kafka
# kafka \u4EE3\u7406\u5730\u5740
spring.kafka.bootstrap-servers=localhost:9092
# consumer group-id
spring.kafka.consumer.group-id=seconds-kill
# \u6307\u5B9A topic id
spring.kafka.template.default-topic=SECONDS-KILL-TOPIC
# \u5BB9\u5668\u4E2D\u7684\u7EBF\u7A0B\u6570\uFF0C\u7528\u4E8E\u63D0\u9AD8\u5E76\u53D1\u6570\u91CF
spring.kafka.listener.concurrency=3